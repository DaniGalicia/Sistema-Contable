/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SIC.Vistas;

import SIC.Entidades.Cuenta;
import SIC.Service.Comunes;
import SIC.Entidades.Empleado;
import SIC.Entidades.Movimiento;
import SIC.Entidades.Periodo;
import SIC.Entidades.Planilla;
import SIC.Service.SICService;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dannier
 */
public class Planillas extends javax.swing.JDialog {

    List<Planilla> planillaActual = new ArrayList<>();


    /**
     * Creates new form MantenimientoCuentas
     */
    public Planillas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        listaPeriodos.setModel(Comunes.crearModeloComboBox(SICService.getServPeriodo().getListado(Periodo.class)));
        this.setLocationRelativeTo(null);
    }

    private void cargarDatos() {
      planillaActual = SICService.getServPlanilla().getPlanillaByPeriodo((Periodo)listaPeriodos.getSelectedItem());
        DefaultTableModel defaultTableModel = (DefaultTableModel) tablaPlanillas.getModel();

        if(planillaActual.isEmpty() || planillaActual.get(0).getEstado().equals("0")){
            btnCerrar.hide();
        }
        while (defaultTableModel.getRowCount() > 0) {
            defaultTableModel.removeRow(0);
        }
        for (Planilla planilla : planillaActual) {
            Object[] linea = {planilla.getEmpleado().getApellidos() + ", " + planilla.getEmpleado().getNombres() ,
                planilla.getEmpleado().getCargo().getSueldo(),
                planilla.getIsss(),
                planilla.getAfp(),
                planilla.getOtroIngreso(),
                planilla.getOtroEgreso(),
                planilla.getSueldoNeto()
            };
            defaultTableModel.addRow(linea);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        listaPeriodos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPlanillas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de planillas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar"));

        listaPeriodos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        listaPeriodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaPeriodosActionPerformed(evt);
            }
        });

        jLabel1.setText("Periodo:");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Generar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnCerrar.setText("Cerrar planilla");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listaPeriodos, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(btnCerrar)
                .addGap(0, 68, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listaPeriodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(btnCerrar)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Planilla"))));

        tablaPlanillas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Empleado", "Salario bruto", "ISSS", "AFP", "Otros ingresos", "Otros egresos", "Salario neto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPlanillas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPlanillasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPlanillas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 
    private void tablaPlanillasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPlanillasMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            Planilla planillaSelected= planillaActual.get(tablaPlanillas.getSelectedRow());
            new IngresosPlanilla((JFrame)this.getParent(), true,planillaSelected).setVisible(true);
            cargarDatos();
        }
    }//GEN-LAST:event_tablaPlanillasMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        cargarDatos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Periodo periodoSelected =(Periodo)listaPeriodos.getSelectedItem();
        
        if(periodoSelected.getActivo().equals("0")){
            JOptionPane.showMessageDialog(this, "El periodo contable ya esta cerrado, no se puede generar planilla");
            return;
        }
        
        if(SICService.getServPlanilla().getPlanillaByPeriodo(periodoSelected).isEmpty()){
            
            for(Empleado empleado:(List<Empleado>) SICService.getServEmpleado().getListado(Empleado.class)){
                Planilla planilla = new Planilla();
                planilla.setEmpleado(empleado);
                planilla.setPeriodo((Periodo)listaPeriodos.getSelectedItem());
                planilla.setSalarioBruto(empleado.getCargo().getSueldo());
                
                //Seguro
                
                planilla.setIsss(empleado.getCargo().getSueldo() * 0.075);
                
                //afp
                planilla.setAfp(empleado.getCargo().getSueldo() * 0.065);
                planilla.setOtroIngreso(0.0);
                planilla.setOtroEgreso(0.0);
                planilla.calcularSueldoNeto();
                
                SICService.getServPlanilla().guardar(planilla);
            }
            cargarDatos();
        }else{
            JOptionPane.showMessageDialog(this, "Ya se generó esta planilla");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void listaPeriodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaPeriodosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listaPeriodosActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        int resultado = JOptionPane.showConfirmDialog(this, "Ya no podrá realizar modificaciones \n ¿Desea cerrarla?");
        
        if(resultado==0){
            //Cuenta de gasto por salario
            Cuenta c = (Cuenta) SICService.getServCuenta().getByPK(Cuenta.class, "4202-001");
            //Cuenta de gasto por seguro
            
            
            //Cuenta de gasto por afp
            
            
            
            for(Planilla p:planillaActual){
                /*Se debe crear un movimiento por cada cuenta a afectar y esto por cada linea de la planilla
                    No olvidar la partida doble, ejemplo si carga efectivo abono en otra cuenta
                */
                
                Movimiento m=new Movimiento();
                //La cuenta correspondiente, obtenida antes
                m.setCuenta(c);
                //D o H segun corresponda
                m.setTipo("");
                //Segun corresponda, p.getIss(),  p.getAfp etc
                m.setCantidad(0);
                
                //El mismo para todos los movimientos
                m.setPeriodo(p.getPeriodo());

                //Por cada movimiento creado anteriormente
                SICService.getServMovimiento().guardar(m);
                
                //Fija el ettado de planilla a cerrada
                p.setEstado("0");
            }
            SICService.getServPlanilla().guardar(planillaActual);
            
            JOptionPane.showMessageDialog(this,"Planilla cerrada");
        
        }
        
    }//GEN-LAST:event_btnCerrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> listaPeriodos;
    private javax.swing.JTable tablaPlanillas;
    // End of variables declaration//GEN-END:variables
}
